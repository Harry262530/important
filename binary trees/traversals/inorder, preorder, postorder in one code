You have been given a Binary Tree of 'N'

nodes, where the nodes have integer values.



Your task is to return the ln-Order, Pre-Order, and Post-Order traversals of the given binary tree.



For example :
For the given binary tree:

The Inorder traversal will be [5, 3, 2, 1, 7, 4, 6].
The Preorder traversal will be [1, 3, 5, 2, 4, 7, 6].
The Postorder traversal will be [5, 2, 3, 7, 6, 4, 1].
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1 :
1 2 3 -1 -1 -1  6 -1 -1
Sample Output 1 :
2 1 3 6 
1 2 3 6 
2 6 3 1


  vector<vector<int>> getTreeTraversal(TreeNode *root){
    vector<int> pre,in,post;
    vector<vector<int>> ans;
    if (root==NULL){
        return ans;
    }
    stack<pair<TreeNode *,int>> s;
    s.push({root,1});
    while (!s.empty()){
        auto x=s.top();
        s.pop();
        if (x.second==1){
            pre.push_back(x.first->data);
            
            x.second++;
            s.push(x);
            if (x.first->left){
                s.push({x.first->left,1});
            }
        }
        else if (x.second==2){
            in.push_back(x.first->data);
            
            x.second++;
            s.push(x);
            if (x.first->right){
                s.push({x.first->right,1});
            }
        }
        else{
            post.push_back(x.first->data);
        }
    }
    
    ans.push_back(in);
    ans.push_back(pre);
    ans.push_back(post);
    return ans;
}
