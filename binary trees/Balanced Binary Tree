Given a binary tree, determine if it is 
height-balanced
.

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: true
Example 2:


Input: root = [1,2,2,3,3,null,null,4,4]
Output: false
Example 3:

Input: root = []
Output: true

class Solution {
public:

    int helper(TreeNode *root){
        if (root==NULL){
            return 0;
        }
        int left=0,right=0;
        left=helper(root->left);
        // if false came from any one side, then take it to the top by returning initially of the call
        if (left==-1){
            return -1;
        }
        right=helper(root->right);
        if (right==-1){
            return -1;
        }
        if ((abs(left-right))>1){
            return -1;
        }
        return 1+max(left,right);
    }

    bool isBalanced(TreeNode* root) {
        if (root==NULL){
            return true;
        }if (helper(root)==-1){
            return false;
        }
        return true;
    }
};
