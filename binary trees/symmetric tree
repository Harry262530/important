Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

 

Example 1:


Input: root = [1,2,2,3,4,4,3]
Output: true
Example 2:


Input: root = [1,2,2,null,3,null,3]
Output: false

class Solution {
public:

    bool helper(TreeNode *r1,TreeNode *r2){
        if (r1==NULL && r2==NULL){
            return true;
        }
        if (r1==NULL || r2==NULL){
            return false;
        }
        if (r1->val!=r2->val){
            return false;
        }
        bool left=helper(r1->left,r2->right);
        bool right=helper(r1->right,r2->left);
        return left&&right;
    }

    bool isSymmetric(TreeNode* root) {
        return helper(root->left,root->right);
    }
};
