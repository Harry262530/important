You have been given ‘K’ different arrays/lists, which are sorted individually (in ascending order). You need to merge all the given arrays/list such that the output array/list should be sorted in ascending order.

Detailed explanation ( Input/output format, Notes, Images )
Constraints :

Explain
1 <= T <= 5
1 <= K <= 5
1 <= N <= 20
-10^5 <= DATA <= 10^5

Time Limit: 1 sec 
Sample Input 1:

Explain
1
2
3 
3 5 9 
4 
1 2 3 8   
Sample Output 1:
1 2 3 3 5 8 9 
Explanation of Sample Input 1:
After merging the two given arrays/lists [3, 5, 9] and [ 1, 2, 3, 8], the output sorted array will be [1, 2, 3, 3, 5, 8, 9].
Sample Input 2:

Explain
1
4
3
1 5 9
2
45 90
5
2 6 78 100 234
1
0


#include <bits/stdc++.h> 

vector<int> helper(vector<int> &n,vector<int> &m){
    vector<int> ans;
    int i=0,j=0;
    while (i<n.size() && j<m.size()){
        if (n[i]<m[j]){
            ans.push_back(n[i]);
            i++;
        }
        else{
            ans.push_back(m[j]);
            j++;
        }
    }
    while (i<n.size()){
        ans.push_back(n[i]);
        i++;
    }
    while (j<m.size()){
        ans.push_back(m[j]);
        j++;
    }
    return ans;
}

vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    if (kArrays.size()<=1){
        return kArrays[0];
    }
    vector<int> temp=helper(kArrays[0],kArrays[1]);
    for (int i=2;i<kArrays.size();i++){
        temp=helper(temp,kArrays[i]);
    }
    return temp;
}
