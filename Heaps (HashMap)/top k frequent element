Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

 

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> m;
        for (auto x:nums){
            m[x]++;
        }
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> q;
        for (auto x:m){
            q.push({x.second,x.first});
            if (q.size()>k){
                q.pop();
            }
        }
        vector<int> ans;
        while (!q.empty()){
            ans.push_back(q.top().second);
            q.pop();
        }
        return ans;
    }
};
