A doubly-linked list is a data structure that consists of sequentially linked nodes, and the nodes have reference to both the previous and the next nodes in the sequence of nodes.



You’re given a doubly-linked list and a key 'k'.



Delete all the nodes having data equal to ‘k’.



Example:

Explain
Input: Linked List: 10 <-> 4 <-> 10 <-> 3 <-> 5 <-> 20 <-> 10 and ‘k’ = 10

Output: Modified Linked List: 4 <-> 3 <-> 5 <-> 20

Explanation: All the nodes having ‘data’ = 10 are removed from the linked list.


Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
7
10 4 10 3 5 20 10
10


Sample Output 1:
4 3 5 20


Explanation Of Sample Input 1:
All the nodes having ‘data’ = 10 are removed from the linked list.


Sample Input 2:
7
10 4 10 3 5 20 10
30


  Node * deleteAllOccurrences(Node* head, int k) {
    if (head==NULL || (head->next==NULL && head->data==k)){
        return NULL;
    }
    Node *dummy=new Node(-1);
    dummy->next=head;
    Node *curr=dummy;
    while (curr->next){
        if (curr->next->data==k){
            curr->next=curr->next->next;
        }
        else{
            curr=curr->next;
        }
    }
    return dummy->next;
}
