Given the head of a linked list, remove the nth node from the end of the list and return its head.

 

Example 1:


Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]


class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *temp=new ListNode();
        temp->next=head;
        // fast aur slow ko temp (head ke pehle) se use kra hai kyuki hame head ko bhi nikalna pd skta hai 
        ListNode *fast=temp;
        ListNode *slow=temp;
        for (int i=0;i<n;i++){
            fast=fast->next;
        }
        while (fast->next){
            slow=slow->next;
            fast=fast->next;
        }
        ListNode *remove=slow->next;
        slow->next=slow->next->next;
        return temp->next;
    }
};
