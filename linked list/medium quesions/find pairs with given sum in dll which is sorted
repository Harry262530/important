A doubly-linked list is a data structure that consists of sequentially linked nodes, and the nodes have reference to both the previous and the next nodes in the sequence of nodes.



You are given a sorted doubly linked list of size 'n', consisting of distinct positive integers, and a number 'k'.



Find out all the pairs in the doubly linked list with sum equal to 'k'.



Example :

Explain
Input: Linked List: 1 <-> 2 <-> 3 <-> 4 <-> 9 and 'k' = 5

Output: (1, 4) and (2, 3)

Explanation: There are 2 pairs in the linked list having sum 'k' = 5.
Detailed explanation ( Input/output format, Notes, Images )
Sample input 1:
5
1 2 3 4 9
5


Sample output 1
2
1 4
2 3


Explanation for sample input 1 :
There are 2 pairs in the linked list having sum equal to 'k' (= 5).


Sample input 2:
5
1 10 11 12 27
7


Sample output 2:
0

Node *findlast(Node *head){
    while (head->next){
        head=head->next;
    }
    return head;
}

vector<pair<int, int>> findPairs(Node* head, int k)
{
    if (head==NULL){
        return {};
    }
    Node *left=head;
    Node *right=findlast(head);
    vector<pair<int,int>> ans;
    while (left->data<right->data){
        if (left->data+right->data<k){
            left=left->next;
        }
        else if (left->data+right->data>k){
            right=right->prev;
        }
        else{
            ans.push_back({left->data,right->data});
            left=left->next;
            right=right->prev;
        }
    }
    return ans;
}
