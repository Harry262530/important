Given a string s of length n, find all the possible subsequences of the string s in lexicographically-sorted order.

Example 1:

Input : 
s = "abc"
Output: 
a ab abc ac b bc c
Explanation : 
There are a total 7 number of subsequences possible 
for the given string, and they are mentioned above 
in lexicographically sorted order.
Example 2:

Input: 
s = "aa"
Output: 
a a aa
Explanation : 
There are a total 3 number of subsequences possible 
for the given string, and they are mentioned above 
in lexicographically sorted order.

class Solution{
	public:
		vector<string> AllPossibleStrings(string s){
		    vector<string> ans;
		    int subset=pow(2,s.size());
		    for (int i=1;i<subset;i++){
		        string temp="";
		        for (int j=0;j<s.size();j++){
		            if ((i&(1<<j))!=0){
		                temp+=s[j];
		            }
		        }
		        ans.push_back(temp);
		    }
		  //  sort(ans.begin(),ans.end());
		    return ans;
		}
};
