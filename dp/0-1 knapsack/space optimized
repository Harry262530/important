int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
	int w=maxWeight;
	vector<int> prev(maxWeight+1,0);
	vector<int> temp(maxWeight+1,0);
	// return helper(n-1,maxWeight,dp,weight,value);
	
	for (int i=0;i<=w;i++){
		if (weight[0]<=i){
			prev[i]=value[0];
		}
	}
	for (int i=1;i<n;i++){
		for (int j=0;j<=w;j++){
			int pick=INT_MIN;
			int notpick=prev[j];
			if (weight[i]<=j){
				pick=value[i]+prev[j-weight[i]];
			}
			temp[j]=max(pick,notpick);
		}
		prev=temp;
	}
	return prev[w];
}
