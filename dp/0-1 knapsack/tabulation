int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
	vector<vector<int>> dp(n,vector<int>(maxWeight+1,0));
	// return helper(n-1,maxWeight,dp,weight,value);
	int w=maxWeight;
	for (int i=0;i<=w;i++){
		if (weight[0]<=i){
			dp[0][i]=value[0];
		}
	}
	for (int i=1;i<n;i++){
		for (int j=0;j<=w;j++){
			int pick=INT_MIN;
			int notpick=dp[i-1][j];
			if (weight[i]<=j){
				pick=value[i]+dp[i-1][j-weight[i]];
			}
			dp[i][j]=max(pick,notpick);
		}
	}
	return dp[n-1][w];
}
