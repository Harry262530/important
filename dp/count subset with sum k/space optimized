int findWays(vector<int>& arr, int k)
{
	// if array starts from 0, for that condition start by sorting it
	sort(arr.begin(),arr.end(),greater<int>());
	int n=arr.size();
	vector<int> prev(k+1,0);
	
	// return helper(n-1,k,dp,arr);
	for (int i=0;i<n;i++){
		prev[0]=1;
	}
	if (arr[0]<=k){
		prev[arr[0]]=1;
	}
	for (int i=1;i<n;i++){
		vector<int> temp(k+1,0);
		//kyuki base case me saare rows ki pehli column1 decide ki thi
		temp[0]=1;
		for (int j=1;j<k+1;j++){
			int pick=0,notpick=0;
			notpick=prev[j];
			if (arr[i]<=j){
				pick=prev[j-arr[i]];
			}
			temp[j]=(pick+notpick)%mods;
		}
		prev=temp;
	}
	return prev[k];
}
