
Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.

A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.

 

Example 1:

Input: n = 1
Output: 5
Explanation: The 5 sorted strings that consist of vowels only are ["a","e","i","o","u"].
Example 2:

Input: n = 2
Output: 15
Explanation: The 15 sorted strings that consist of vowels only are
["aa","ae","ai","ao","au","ee","ei","eo","eu","ii","io","iu","oo","ou","uu"].
Note that "ea" is not a valid string since 'e' comes after 'a' in the alphabet.



class Solution {
public:

    void helper(int ind,string temp,int n,vector<char> &v,int &ans){
        if (ind<0 && temp.size()==n){
            ans++;
            return;
        }
        for (int i=0;i<5;i++){
            if (temp.empty() || temp[temp.size()-1]<=v[i]){
                helper(ind-1,temp+v[i],n,v,ans);
            }  
        }
    }

    int countVowelStrings(int n) {
        vector<char> v{'a','e','i','o','u'};
        int ans=0;
        helper(n-1,"",n,v,ans);
        return ans;
    }
};
