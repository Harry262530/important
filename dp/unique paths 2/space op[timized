class Solution {
public:
    
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int n=obstacleGrid.size();
        int m=obstacleGrid[0].size();
        if (obstacleGrid[n-1][m-1]==1){
            return 0;
        }
        
        vector<int> prev(m,0);
        for (int i=0;i<n;i++){
            vector<int> temp(m,0);
            for (int j=0;j<m;j++){
                if (i==0 && j==0){
                    temp[j]=1;
                    continue;
                }
                int top=0,left=0;
                if (i>0 && obstacleGrid[i-1][j]!=1){
                    top=prev[j];
                }
                if (j>0 && obstacleGrid[i][j-1]!=1){
                    left=temp[j-1];
                }
                temp[j]=left+top;
            }
            prev=temp;
        }
        return prev[m-1];
    }
};
