int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        // prev index starts from -1 so we can do the cordinate change and if -1 is previous index we will store it in 0 i.e previous index+1;
        vector<vector<int>> dp(n+1,vector<int> (n+1,0));
        for (int i=n-1;i>=0;i--){
            for (int j=i-1;j>=-1;j--){
                int notpick=dp[i+1][j+1];
                int pick=INT_MIN;
                if (j==-1 || nums[i]>nums[j]){
                    pick=1+dp[i+1][i+1];
                }
                dp[i][j+1]=max(pick,notpick);
            }
        }
        return dp[0][-1+1];
    }
