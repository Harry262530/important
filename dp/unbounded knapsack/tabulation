int knapSack(int n, int w, int val[], int wt[])
    {
        vector<vector<int>> dp(n,vector<int>(w+1,0));
        // return helper(N-1,W,dp,val,wt);
        for (int i=0;i<=w;i++){
            dp[0][i]=(i/wt[0])*val[0];
        }
        for (int i=1;i<n;i++){
            for (int j=0;j<=w;j++){
                int notpick=dp[i-1][j];
                int pick=INT_MIN;
                if (wt[i]<=j){
                    pick=val[i]+dp[i][j-wt[i]];
                }
                dp[i][j]=max(pick,notpick);
            }
        }
        return dp[n-1][w];
    }
