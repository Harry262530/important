first and last house are adjacent....... means circular arrangement of houses

The approach to solving this problem can be summarized as:

Make two reduced arrays – arr1(arr-last element) and arr2(arr-first element).
Find the maximum of non-adjacent elements as mentioned in article DP5 on arr1 and arr2 separately. Let’s call the answers we got ans1 and ans2 respectively.
Return max(ans1, ans2) as our final answer.


  class Solution {
public:
    int helper(vector<int> &arr){
        int m=arr.size();
        int prev1=arr[0];
        int prev2=0;
        for (int i=1;i<m;i++){
            int pick=arr[i];
            if (i>1){
                pick+=prev2;
            }
            int not_pick=prev1;
            int curr=max(pick,not_pick);
            prev2=prev1;
            prev1=curr;
        }
        return prev1;
    }
    int rob(vector<int>& nums) {
        int n=nums.size();
        vector<int> first,last;
        if (n==1){
            return nums[0];
        }
        for (int i=0;i<n;i++){
            if (i!=0) last.push_back(nums[i]);
            if (i!=n-1) first.push_back(nums[i]);
        }
        return max(helper(first),helper(last));
    }
};
