You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

class Solution {
public:
    
    int helper(int n,vector<int> &t){
        if (n==0 || n==1 || n==2){
            return n;
        }
        if (t[n]!=-1){
            return t[n];
        }
        return t[n]=helper(n-1,t)+helper(n-2,t);
        
        
    }
    int climbStairs(int n) {
        vector<int> t(n+1,-1);
        return helper(n,t);
    }
};
