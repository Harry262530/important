You are given an array 'nums' of ‘n’ integers.



Return all subset sums of 'nums' in a non-decreasing order.



Note:
Here subset sum means sum of all elements of a subset of 'nums'. A subset of 'nums' is an array formed by removing some (possibly zero or all) elements of 'nums'.


For example
Input: 'nums' = [1,2]

Output: 0 1 2 3

void helper(int ind,int sum,vector<int> &ans,vector<int> &num){
	if (ind==num.size()){
		ans.push_back(sum);
		return;
	}
	helper(ind+1,sum,ans,num);
	helper(ind+1,sum+num[ind],ans,num);
}

vector<int> subsetSum(vector<int> &num){
	vector<int> ans;
	helper(0,0,ans,num);
	sort(ans.begin(),ans.end());
	return ans;	
}
