Implement pow(x, n), which calculates x raised to the power n (i.e., xn).

 

Example 1:

Input: x = 2.00000, n = 10
Output: 1024.00000
Example 2:

Input: x = 2.10000, n = 3
Output: 9.26100
Example 3:

Input: x = 2.00000, n = -2
Output: 0.25000
Explanation: 2-2 = 1/22 = 1/4 = 0.25


//Basic function call

class Solution {
public:
    double helper(double x,int n){
        if (n==0){
            return 1;
        }
        if (n<0){
            return 1/x*helper(x,n+1);
        }
        return x*helper(x,n-1);
    }

    double myPow(double x, int n) {
        return helper(x,n);
    }
};


//using maths

class Solution {
public:
    double myPow(double x, int n) {
        if (n==0){
            return 1;
        }
        double res=0.0;
        if (n%2==0){
            res=myPow(x*x,abs(n)/2);
        }
        else {
            res=x*myPow(x*x,(abs(n)-1)/2);
        }
        if (n>0){
            return res;
        }
        return 1/res;
    }
};
