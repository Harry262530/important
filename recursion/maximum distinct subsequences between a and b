Problem statement
You are given two strings 'A' and 'B' of length 'N' and 'M' respectively.



Return the string that has more distinct subsequences, if both strings have the same number of distinct subsequences, then return 'A'.



For Example:
'N' = 2, 'M' = 2, 'A' = "ab", 'B' = "dd".

'A' has distinct subsequences = ["a", "b", "ab"].
'B' has distinct subsequences = ["d", "dd"].
So our answer is "ab".
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
1 3
f
eeg
Sample Output 1:
eeg
Explanation of sample output 1:
'A' has distinct subsequences = ["f"].
'B' has distinct subsequences = ["e", "g", "eg", "ee", "eeg"].
So our answer is "eeg".


#include <bits/stdc++.h>

unordered_map<string,int> mp;

void helper(int ind,string temp,string &s){
    if (ind<0){
        if (mp.find(temp)==mp.end()){
            mp[temp]++;
        }
        return;
    }
    helper(ind-1,temp+s[ind],s);
    helper(ind-1,temp,s);
    return;
}

string moreSubsequence(int n, int m, string a, string b)
{
    helper(n-1,"",a);
    int s1=mp.size();
    mp.clear();
    helper(m-1,"",b);
    int s2=mp.size();
    if (s2>s1){
        return b;
    } 
    return a;
}
