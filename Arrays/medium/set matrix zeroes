Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:


Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
Example 2:


Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]



class Solution {
public:

    void helper(int i,int j,int n,int m,vector<vector<int>> &matrix){
        for (int k=0;k<n;k++){
            matrix[k][j]=0;
        }
        for (int k=0;k<m;k++){
            matrix[i][k]=0;
        }
    }

    void setZeroes(vector<vector<int>>& matrix) {
        vector<pair<int,int>> v;
        int n=matrix.size();
        int m=matrix[0].size();
        for (int i=0;i<n;i++){
            for (int j=0;j<m;j++){
                if (matrix[i][j]==0){
                    v.push_back({i,j});
                }
            }
        }
        for (auto x:v){
            helper(x.first,x.second,n,m,matrix);
        }
    }
};
